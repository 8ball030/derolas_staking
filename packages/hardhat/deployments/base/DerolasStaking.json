{
  "address": "0x27B863F382791e0E4950497B4bbda5b69CbB10b9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumDonation",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_balancerRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolId",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_assetsInPool",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_wethIndex",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_olasIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_incentiveTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epochRewards",
          "type": "uint256"
        }
      ],
      "name": "AuctionEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donatorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EthDonatedToBalancer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donatorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnclaimedRewardsDonated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assetsInPool",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balancerRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        }
      ],
      "name": "canPayTicket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPlayGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEpoch",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endEpoch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "epochDonated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "epochToClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "epochToDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "epochToEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "epochToTotalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "donation",
          "type": "uint256"
        }
      ],
      "name": "estimateTicketPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "forceAdvanceEpoch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getCurrentShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getGameState",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "_currentEpoch",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_epochLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_epochEndBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumDonation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_blocksRemaining",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_epochRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDonated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_incentiveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCurrentDonation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCurrentShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userClaimable",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasClaimed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_canPlayGame",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalUnclaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentiveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentiveTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDonatorsPerEpoch",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumDonation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "olasIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "contract IPermit2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "topUpIncentiveBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc95b1816bbfa1bf32b194ae629a89cc2c20be6098e2540a764bfece780b44d18",
  "receipt": {
    "to": null,
    "from": "0x5D407A012071CB234CA1A965be9E47a3fCA5d704",
    "contractAddress": "0x27B863F382791e0E4950497B4bbda5b69CbB10b9",
    "transactionIndex": 103,
    "gasUsed": "2025973",
    "logsBloom": "0x
    "blockHash": "0x02bf93495e8d6a89ec24e4725a48cd1fe6744a260e8d7da0a6ce00e0ed551167",
    "transactionHash": "0xc95b1816bbfa1bf32b194ae629a89cc2c20be6098e2540a764bfece780b44d18",
    "logs": [
      {
        "transactionIndex": 103,
        "blockNumber": 29491741,
        "transactionHash": "0xc95b1816bbfa1bf32b194ae629a89cc2c20be6098e2540a764bfece780b44d18",
        "address": "0x27B863F382791e0E4950497B4bbda5b69CbB10b9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005d407a012071cb234ca1a965be9e47a3fca5d704"
        ],
        "data": "0x",
        "logIndex": 463,
        "blockHash": "0x02bf93495e8d6a89ec24e4725a48cd1fe6744a260e8d7da0a6ce00e0ed551167"
      }
    ],
    "blockNumber": 29491741,
    "cumulativeGasUsed": "40661778",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5D407A012071CB234CA1A965be9E47a3fCA5d704",
    100000000000000,
    "0x3f170631ed9821ca51a59d996ab095162438dc10",
    "0xaf5b7999f491c42c05b5a2ca80f1d200d617cc8c",
    8,
    1,
    3,
    "0x54330d28ca3357f294334bdc454a032e7f353416"
  ],
  "numDeployments": 7,
  "solcInputHash": "27a523680afd67b2925b0325fc8d17f6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumDonation\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_balancerRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolId\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_assetsInPool\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_wethIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_olasIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_incentiveTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochRewards\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EthDonatedToBalancer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnclaimedRewardsDonated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assetsInPool\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balancerRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"name\":\"canPayTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPlayGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"epochDonated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"epochToClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"epochToDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"epochToEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"epochToTotalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"name\":\"estimateTicketPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceAdvanceEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlocksRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getCurrentShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getGameState\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"_currentEpoch\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_epochLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumDonation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blocksRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDonated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incentiveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCurrentDonation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCurrentShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userClaimable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canPlayGame\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUnclaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDonatorsPerEpoch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"olasIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"topUpIncentiveBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"DerolasStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IBalancerRouter {\\n    function donate(\\n        address pool,\\n        uint256[] memory amountsIn,\\n        bool wethIsEth,\\n        bytes memory userData\\n    ) external payable;\\n    // get permit2\\n    function getPermit2() external view returns (address);\\n}\\n\\ninterface IPermit2 {\\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\\n}\\n\\n\\ncontract DerolasStaking is ReentrancyGuard, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n\\n    IPermit2 public immutable permit2;\\n\\n    address public immutable balancerRouter;\\n    address public immutable poolId;\\n    uint8 public immutable assetsInPool;\\n    uint8 public immutable wethIndex;\\n    uint8 public immutable olasIndex;\\n    address public immutable incentiveTokenAddress;\\n\\n    uint256 public immutable minimumDonation;\\n    uint256 public immutable epochRewards = 8e17; // 1 OLAS\\n    uint256 public immutable epochLength = 90;\\n\\n    uint256 public totalDonated;\\n    uint256 public totalClaimed;\\n    uint8 public currentEpoch = 0;\\n\\n    uint8 public constant maxDonatorsPerEpoch = 8;\\n\\n    mapping(uint8 => mapping(address => uint256)) public epochToDonations;\\n    mapping(uint8 => mapping(address => uint256)) public epochToClaimed;\\n    mapping(uint8 => uint256) public epochToTotalDonated;\\n    mapping(uint8 => uint256) public epochToEndBlock;\\n    mapping(uint8 => bool) public epochDonated;\\n\\n    event DonationReceived(address indexed donatorAddress, uint256 indexed amount);\\n    event AuctionEnded(uint256 indexed epochRewards);\\n    event UnclaimedRewardsDonated(uint256 indexed amount);\\n    event RewardsClaimed(address indexed donatorAddress, uint256 indexed amount);\\n    event EthDonatedToBalancer(uint256 indexed amount);\\n\\n\\n    receive() external payable {}\\n\\n    function incentiveBalance() public view returns (uint256) {\\n        return IERC20(incentiveTokenAddress).balanceOf(address(this));\\n    }\\n\\n    function canPlayGame() public view returns (bool) {\\n        return incentiveBalance() >= epochRewards;\\n    }\\n\\n    function canPayTicket(uint256 claimAmount) public view returns (bool) {\\n        return incentiveBalance() >= claimAmount;\\n    }\\n\\n    modifier onlyOncePerEpoch() {\\n        require(block.number >= epochToEndBlock[currentEpoch], \\\"Epoch not over\\\");\\n        _;\\n    }\\n\\n    modifier gameHasStarted() {\\n        require(currentEpoch > 0, \\\"Game has not started yet\\\");\\n        _;\\n    }\\n\\n\\n    function endEpoch() external onlyOncePerEpoch nonReentrant {\\n        require(currentEpoch > 0, \\\"No epoch to end\\\");\\n        require(block.number > epochToEndBlock[currentEpoch], \\\"Epoch not over\\\");\\n        donateUnclaimedRewards();\\n        donateEthContribution();\\n        storeGame();\\n        advanceEpoch();\\n        emit AuctionEnded(epochRewards);\\n    }\\n\\n\\n    function storeGame() internal {\\n        epochToTotalDonated[currentEpoch] = totalDonated;\\n    }\\n\\n    function advanceEpoch() internal {\\n        currentEpoch += 1;\\n        totalDonated = 0;\\n        totalClaimed = 0;\\n        epochToEndBlock[currentEpoch] = block.number + epochLength;\\n    }\\n\\n    function donateUnclaimedRewards() internal {\\n        if (currentEpoch == 0) {\\n            return;\\n        }\\n        uint8 epoch = currentEpoch - 1;\\n        uint256 totalEpochDonations = epochToTotalDonated[epoch];\\n        if (totalEpochDonations == 0) {\\n            epochDonated[epoch] = true;\\n            return;\\n        }\\n\\n        uint256 unclaimedAmount = epochRewards - totalClaimed;\\n        if (unclaimedAmount == 0) {\\n            epochDonated[epoch] = true;\\n            return;\\n        }\\n        require(IERC20(incentiveTokenAddress).balanceOf(address(this)) >= unclaimedAmount, \\\"Not enough incentive balance to donate\\\");\\n\\n        uint256[] memory amountsIn = new uint256[](assetsInPool);\\n        amountsIn[olasIndex] = unclaimedAmount;\\n\\n        IERC20 token = IERC20(incentiveTokenAddress);\\n        token.approve(address(permit2), 0);\\n        token.approve(address(permit2), unclaimedAmount);\\n        permit2.approve(incentiveTokenAddress, balancerRouter, uint160(unclaimedAmount), uint48(block.timestamp + 1 days));\\n        IBalancerRouter(balancerRouter).donate(poolId, amountsIn, true, \\\"\\\");\\n        epochDonated[epoch] = true;\\n        emit UnclaimedRewardsDonated(unclaimedAmount);\\n    }\\n    function donateEthContribution() internal {\\n        // require(IERC20(incentiveTokenAddress).balanceOf(address(this)) >= unclaimedAmount, \\\"Not enough incentive balance to donate\\\");\\n        // we instead check the whole balance of the contract\\n        uint256 contributionAmount = address(this).balance;\\n        if (contributionAmount == 0) {\\n            return;\\n        }\\n        uint256[] memory amountsIn = new uint256[](assetsInPool);\\n        amountsIn[wethIndex] = contributionAmount;\\n        IBalancerRouter(balancerRouter).donate{value: contributionAmount}(poolId, amountsIn, true, \\\"\\\");\\n        emit EthDonatedToBalancer(contributionAmount);\\n    }\\n\\n\\n    function claim() external nonReentrant {\\n        require(currentEpoch > 0, \\\"No epoch to claim from\\\");\\n\\n        uint8 claimEpoch = currentEpoch - 1;\\n        require(epochToEndBlock[claimEpoch] > 0, \\\"Epoch not ended yet\\\");\\n        require(block.number <= epochToEndBlock[claimEpoch] + (2 * epochLength), \\\"Claim window closed\\\");\\n        require(epochToClaimed[claimEpoch][msg.sender] == 0, \\\"Already claimed\\\");\\n\\n        uint256 donation = epochToDonations[claimEpoch][msg.sender];\\n        require(donation > 0, \\\"No donation found\\\");\\n\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n        require(totalEpochDonations > 0, \\\"No donations this epoch\\\");\\n\\n        uint256 amount = (donation * epochRewards) / totalEpochDonations;\\n        require(amount > 0, \\\"Nothing to claim\\\");\\n        require(canPayTicket(amount), \\\"Not enough OLAS rewards\\\");\\n\\n        epochToClaimed[claimEpoch][msg.sender] = amount;\\n\\n        IERC20(incentiveTokenAddress).transfer(msg.sender, amount);\\n\\n        totalClaimed += amount;\\n        emit RewardsClaimed(msg.sender, amount);\\n    }\\n\\n    function claimable(address _address) external view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        uint8 claimEpoch = currentEpoch - 1;\\n        if (epochToClaimed[claimEpoch][_address] > 0) {\\n            return 0;\\n        }\\n\\n        uint256 donation = epochToDonations[claimEpoch][_address];\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n\\n        if (donation == 0 || totalEpochDonations == 0) {\\n            return 0;\\n        }\\n\\n        return (donation * epochRewards) / totalEpochDonations;\\n    }\\n\\n    function estimateTicketPercentage(uint256 donation) public view returns (uint256) {\\n        require(donation >= minimumDonation, \\\"Minimum donation not met\\\");\\n        require(canPlayGame(), \\\"Not enough OLAS rewards to play the game\\\");\\n\\n        if (totalDonated == 0) {\\n            return 1e18; // full share\\n        }\\n\\n        return (donation * 1e18) / totalDonated;\\n    }\\n\\n    function donate() external payable nonReentrant gameHasStarted {\\n        require(msg.value >= minimumDonation, \\\"Donation amount is less than the minimum donation\\\");\\n        require(canPlayGame(), \\\"Not enough OLAS rewards to play the game\\\");\\n        require(epochToDonations[currentEpoch][msg.sender] == 0, \\\"Already donated this epoch\\\");\\n        require(epochToTotalDonated[currentEpoch] < maxDonatorsPerEpoch, \\\"Max donators reached\\\");\\n\\n        totalDonated += msg.value;\\n        epochToDonations[currentEpoch][msg.sender] = msg.value;\\n\\n        emit DonationReceived(msg.sender, msg.value);\\n    }\\n\\n    function topUpIncentiveBalance(uint256 amount) external {\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(IERC20(incentiveTokenAddress).balanceOf(msg.sender) >= amount, \\\"Not enough OLAS rewards\\\");\\n        require(IERC20(incentiveTokenAddress).allowance(msg.sender, address(this)) >= amount, \\\"Not enough allowance\\\");\\n\\n        IERC20(incentiveTokenAddress).safeTransferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    function getCurrentShare(address _address) public view returns (uint256) {\\n        uint256 donation = epochToDonations[currentEpoch][_address];\\n        if (donation == 0) {\\n            return 0;\\n        }\\n        return (donation * 1e18) / totalDonated;\\n    }\\n\\n    function getBlocksRemaining() public view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        if (block.number >= epochToEndBlock[currentEpoch]) {\\n            return 0;\\n        }\\n        uint256 blocksRemaining = epochToEndBlock[currentEpoch] - block.number;\\n        return blocksRemaining;\\n    }\\n\\n\\n    function getTotalDonated() public view returns (uint256) {\\n        return totalDonated;\\n    }\\n\\n    function getEpochRewards() public view returns (uint256) {\\n        return epochRewards;\\n    }\\n\\n    function getCurrentEpoch() public view returns (uint8) {\\n        return currentEpoch;\\n    }\\n\\n    function getTotalClaimed() public view returns (uint256) {\\n        return totalClaimed;\\n    }\\n\\n    function getEpochLength() public view returns (uint256) {\\n        return epochLength;\\n    }\\n    function getTotalUnclaimed() public view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        uint8 claimEpoch = currentEpoch - 1;\\n        if (epochDonated[claimEpoch]) {\\n            return 0;\\n        }\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n        if (totalEpochDonations == 0) {\\n            return 0;\\n        }\\n        return epochRewards - totalClaimed;\\n    }\\n\\n    function forceAdvanceEpoch() external onlyOwner {\\n        storeGame();\\n        advanceEpoch();\\n        emit AuctionEnded(0);\\n    }\\n\\n    function getGameState(address user) external view returns (\\n        uint8 _currentEpoch,\\n        uint256 _epochLength,\\n        uint256 _epochEndBlock,\\n        uint256 _minimumDonation,\\n        uint256 _blocksRemaining,\\n        uint256 _epochRewards,\\n        uint256 _totalDonated,\\n        uint256 _totalClaimed,\\n        uint256 _incentiveBalance,\\n        uint256 _userCurrentDonation,\\n        uint256 _userCurrentShare,\\n        uint256 _userClaimable,\\n        bool _hasClaimed,\\n        bool _canPlayGame\\n    ) {\\n        _currentEpoch = currentEpoch;\\n        _epochLength = epochLength;\\n        _epochEndBlock = epochToEndBlock[currentEpoch];\\n        _minimumDonation = minimumDonation;\\n        _blocksRemaining = block.number >= _epochEndBlock ? 0 : (_epochEndBlock - block.number);\\n        _epochRewards = epochRewards;\\n        _totalDonated = totalDonated;\\n        _totalClaimed = totalClaimed;\\n        _incentiveBalance = IERC20(incentiveTokenAddress).balanceOf(address(this));\\n        _userCurrentDonation = epochToDonations[currentEpoch][user];\\n        _userCurrentShare = totalDonated == 0 ? 0 : (_userCurrentDonation * 1e18) / totalDonated;\\n    \\n        if (currentEpoch == 0) {\\n            _userClaimable = 0;\\n            _hasClaimed = false;\\n        } else {\\n            uint8 claimEpoch = currentEpoch - 1;\\n            _hasClaimed = epochToClaimed[claimEpoch][user] > 0;\\n            uint256 donation = epochToDonations[claimEpoch][user];\\n            uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n            if (donation == 0 || totalEpochDonations == 0 || _hasClaimed) {\\n                _userClaimable = 0;\\n            } else {\\n                _userClaimable = (donation * epochRewards) / totalEpochDonations;\\n            }\\n        }\\n        _canPlayGame = canPlayGame();\\n    }\\n\\n\\n    constructor(\\n        address _owner,\\n        uint256 _minimumDonation,\\n        address _balancerRouter,\\n        address _poolId,\\n        uint8 _assetsInPool,\\n        uint8 _wethIndex,\\n        uint8 _olasIndex,\\n        address _incentiveTokenAddress\\n    ) Ownable(_owner) {\\n        minimumDonation = _minimumDonation;\\n        balancerRouter = _balancerRouter;\\n        poolId = _poolId;\\n        assetsInPool = _assetsInPool;\\n        wethIndex = _wethIndex;\\n        olasIndex = _olasIndex;\\n        incentiveTokenAddress = _incentiveTokenAddress;\\n        epochToEndBlock[currentEpoch] = block.number + epochLength;\\n        permit2 = IPermit2(IBalancerRouter(_balancerRouter).getPermit2());\\n        currentEpoch = 1;\\n        epochToEndBlock[1] = block.number + epochLength;\\n        \\n    }\\n}\\n\",\"keccak256\":\"0x8346916f8bdd766f0ea4189af7cdb97f378e86a4ce0b8a90371ccfb7c1ed9639\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101c06040818152346200034b5781906200252f803803809162000024828662000350565b8439610100938491810103126200034b5762000040826200038a565b906020918284015190620000568386016200038a565b9262000065606087016200038a565b62000073608088016200039f565b6200008160a089016200039f565b966200009e60e06200009660c08c016200039f565b9a016200038a565b60016000908155909590926001600160a01b0391821680156200033357600180546001600160a01b03198116831790915583167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a361018098670b1a2bc2ec5000008a526101a09a605a8c5260ff19926004978489541689556101609b8c528360a05260c05260e0528d526101209b8c52610140978852605a4301804311620003205783918591878052600883528988205587895180968193631bbf2e2360e01b8352165afa801562000316578590620002d1575b60019350166080528454161783558751430192834311620002be575090600884926001835252205551946121809687620003af8839608051878181611331015261195f015260a05187818161119901528181611a300152611cc6015260c05187818161125e01528181611a940152611d12015260e0518781816111e2015281816119070152611c700152518681816109e30152611c9d0152518581816107e1015261193501525184818161051901528181610a6c01528181610f3b015281816112ed015281816115d101526118bf01525183818161029f015281816105b8015281816109780152611f2e0152518281816102d1015281816104ea015281816108ea01528181610eb2015281816113ec0152818161151b0152818161187701528181611e8c015261212101525181818161059101528181610e23015281816114e001526116f80152f35b634e487b7160e01b835260119052602482fd5b5090918381813d83116200030e575b620002ec818362000350565b810103126200030a579062000304600193926200038a565b62000175565b8480fd5b503d620002e0565b87513d87823e3d90fd5b634e487b7160e01b865260118752602486fd5b8651631e4fbdf760e01b815260048101869052602490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200037457604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200034b57565b519060ff821682036200034b5756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908162b370441461146b575080630b9663db1461136057806312261ee71461131c57806320263e87146112d857806324c05b311461128d5780633e0dc34e14611249578063402914f51461122357806340add90514611206578063415ad1d7146111c857806349ec8b38146111845780634e71d92d14610dd2578063533b3bfc14610db557806357d775f814610779578063715018a614610d58578063736a83a11461075a57806376671808146107a6578063773f7a3a1461099b5780637941a06214610d3b5780637d22771d14610cf05780638515697a14610cd057806385de7ff614610a3857806386b7455314610a075780638c3e5a06146109c95780638da5cb5b146109a05780639453e78c1461099b57806396d8f4f3146109605780639971db2f1461094457806399ffc1f81461090f578063a5be619a146108c8578063ad99c57b14610897578063b2cb3a9b1461086a578063b519fc1f14610805578063b88140ae146107c7578063b97dd9e2146107a6578063b99c13e01461077e578063cfe8a73b14610779578063d54ad2a11461075a578063d56e30681461073b578063d9d60b5214610491578063ed88c68e1461027e5763f2fde38b03610011573461027a57602036600319011261027a576102056114b2565b9061020e61153e565b6001600160a01b03918216928315610264575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b508260031936011261027a57610292611684565b60ff815416801561044e577f000000000000000000000000000000000000000000000000000000000000000034106103f1576102f76102cf6115b6565b7f00000000000000000000000000000000000000000000000000000000000000001115611ecf565b808452602091600583528385203386528352838520546103ae578185526007835260088486205410156103745750610331346002546116a7565b6002558352600581528183209033845252349082205534337f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c528380a36001815580f35b835162461bcd60e51b8152908101839052601460248201527313585e08191bdb985d1bdc9cc81c995858da195960621b6044820152606490fd5b835162461bcd60e51b8152908101839052601a60248201527f416c726561647920646f6e6174656420746869732065706f63680000000000006044820152606490fd5b506020608492519162461bcd60e51b8352820152603160248201527f446f6e6174696f6e20616d6f756e74206973206c657373207468616e207468656044820152701036b4b734b6bab6903237b730ba34b7b760791b6064820152fd5b506020606492519162461bcd60e51b8352820152601860248201527f47616d6520686173206e6f7420737461727465642079657400000000000000006044820152fd5b5091346107385760209182600319360112610734576104ae6114b2565b9160ff8554169283825260088552828220548043101560001461072557825b60025460035486516370a0823160e01b8152308b820152929091907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038b866024817f000000000000000000000000000000000000000000000000000000000000000085165afa95861561071b5789966106e8575b508a895260058c528989209716808952968b528888205495836106a6576101c09c5088975b8c8c806106185750505088995b836105856115b6565b10159b81519d8e9182527f00000000000000000000000000000000000000000000000000000000000000009101528c01527f000000000000000000000000000000000000000000000000000000000000000060608c015260808b015260a08a015260c089015260e088015261010087015261012086015261014085015261016084015215156101808301526101a0820152f35b60ff6106296007929e9d949e61172e565b1691828452600681528d8d852090855281528c84205415159d838552600582528d852090855281528c84205492845252848b832054918015801561069e575b8015610697575b1561067d575050509861057c565b61069193509061068c91611d90565b611da3565b9861057c565b508d61066f565b508215610668565b670de0b6b3a76400008088029088820414881517156106d4576101c09d50846106ce91611da3565b9761056f565b50634e487b7160e01b895260118d52602489fd5b9095508b81813d8311610714575b6107008183611594565b810103126107105751943861054a565b8880fd5b503d6106f6565b8a513d8b823e3d90fd5b61072f4382611741565b6104cd565b5080fd5b80fd5b5050346107345781600319360112610734576020906002549051908152f35b5050346107345781600319360112610734576020906003549051908152f35b6114c8565b503461027a57602036600319011261027a57602092503561079d6115b6565b10159051908152f35b5091346107385780600319360112610738575060ff60209254169051908152f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b833461073857806003193601126107385761081e61153e565b61083a60025460ff600454166000526007602052604060002055565b6108426116ca565b807f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8180a280f35b5050346107345760203660031901126107345760209061089061088b6114b2565b612040565b9051908152f35b505034610734576020366003190112610734578060209260ff6108b8611487565b1681526007845220549051908152f35b5050346107345781600319360112610734576020906108e56115b6565b9051907f000000000000000000000000000000000000000000000000000000000000000011158152f35b5050346107345760203660031901126107345760ff8160209382610931611487565b1681526009855220541690519015158152f35b5050346107345781600319360112610734576020905160088152f35b505034610734578160031936011261073457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b611503565b50503461073457816003193601126107345760015490516001600160a01b039091168152602090f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b505034610734576020366003190112610734578060209260ff610a28611487565b1681526008845220549051908152f35b508290346107345760208060031936011261027a578135938415610c8f5780516370a0823160e01b815233848201526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939182818981885afa8015610c545782908890610c5e575b610ab892501015611dc3565b8251636eb1769f60e11b8152338682015230888201528281604481885afa908115610c54579082918891610c1f575b5010610be657825190828201906323b872dd60e01b8252338984015230604484015260648301526064825260a082019167ffffffffffffffff9281811084821117610bd457855251969796889182919082885af13d15610bc7573d918211610bb55790610b7391845191610b6485601f19601f8401160184611594565b82523d898584013e5b85611fdd565b8051918215159283610b9c575b505050610b8b578480f35b51635274afe760e01b815291820152fd5b610bac93508201810191016117c2565b15868080610b80565b634e487b7160e01b8852604186528688fd5b610b739150606090610b6d565b634e487b7160e01b8952604188528989fd5b825162461bcd60e51b8152808601839052601481890152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606490fd5b809250848092503d8311610c4d575b610c388183611594565b81010312610c495781905189610ae7565b8680fd5b503d610c2e565b84513d89823e3d90fd5b50508281813d8311610c88575b610c758183611594565b81010312610c495781610ab89151610aac565b503d610c6b565b5162461bcd60e51b815291820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260649150fd5b509134610738576020366003190112610738575061089060209235611f2c565b50503461073457806003193601126107345780602092610d0e611487565b60ff610d1861149c565b91168252600685528282206001600160a01b039091168252845220549051908152f35b5050346107345781600319360112610734576020906108906120a9565b8334610738578060031936011261073857610d7161153e565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346107345781600319360112610734576020906108906120dc565b503461027a578260031936011261027a57610deb611684565b60ff815416801561114857610e0160ff9161172e565b16918284526020916008835281852054156111115783855260088352818520547f00000000000000000000000000000000000000000000000000000000000000006001600160ff1b03811681036110fe5790610e609160011b906116a7565b43116110c757838552600683528185203386528352818520546110945783855260058352818520338652835281852054801561105e57848652600784528286205490811561101b579061068c610ed7927f000000000000000000000000000000000000000000000000000000000000000090611d90565b938415610fe65784610f3693928592610ef983610ef26115b6565b1015611dc3565b88526006835283882033808a52908452848920839055845163a9059cbb60e01b815291820190815260208101929092529384918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610fdd5750610faf575b5050610f80816003546116a7565b600355337ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8380a36001815580f35b81610fce92903d10610fd6575b610fc68183611594565b8101906117c2565b503880610f72565b503d610fbc565b513d86823e3d90fd5b5082606492519162461bcd60e51b8352820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152fd5b835162461bcd60e51b8152808401869052601760248201527f4e6f20646f6e6174696f6e7320746869732065706f63680000000000000000006044820152606490fd5b5082606492519162461bcd60e51b83528201526011602482015270139bc8191bdb985d1a5bdb88199bdd5b99607a1b6044820152fd5b82606492519162461bcd60e51b8352820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152fd5b82606492519162461bcd60e51b8352820152601360248201527210db185a5b481dda5b991bddc818db1bdcd959606a1b6044820152fd5b634e487b7160e01b875260118352602487fd5b82606492519162461bcd60e51b83528201526013602482015272115c1bd8da081b9bdd08195b991959081e595d606a1b6044820152fd5b506020606492519162461bcd60e51b835282015260166024820152754e6f2065706f636820746f20636c61696d2066726f6d60501b6044820152fd5b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346107345781600319360112610734576020906108906115b6565b505034610734576020366003190112610734576020906108906112446114b2565b611e0f565b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610734578060031936011261073457806020926112ab611487565b60ff6112b561149c565b91168252600585528282206001600160a01b039091168252845220549051908152f35b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461027a578260031936011261027a5760ff8154168352600860205261138c82842054431015611647565b611394611684565b60ff8154169081156114365750825260086020528120546113b6904311611647565b6113be61183e565b6113c6611c60565b6113e260025460ff600454166000526007602052604060002055565b6113ea6116ca565b7f00000000000000000000000000000000000000000000000000000000000000007f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8280a26001815580f35b606490602084519162461bcd60e51b8352820152600f60248201526e139bc8195c1bd8da081d1bc8195b99608a1b6044820152fd5b8490346107345781600319360112610734576020906002548152f35b6004359060ff8216820361149757565b600080fd5b602435906001600160a01b038216820361149757565b600435906001600160a01b038216820361149757565b346114975760003660031901126114975760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346114975760003660031901126114975760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001546001600160a01b0316330361155257565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161157e57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761157e57604052565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561163b5760009161160d575090565b906020823d8211611633575b8161162660209383611594565b8101031261073857505190565b3d9150611619565b6040513d6000823e3d90fd5b1561164e57565b60405162461bcd60e51b815260206004820152600e60248201526d22b837b1b4103737ba1037bb32b960911b6044820152606490fd5b600260005414611695576002600055565b604051633ee5aeb560e01b8152600490fd5b919082018092116116b457565b634e487b7160e01b600052601160045260246000fd5b600454600160ff82160160ff81116116b45760ff16809160ff1916176004556000600255600060035561171d7f0000000000000000000000000000000000000000000000000000000000000000436116a7565b906000526008602052604060002055565b60ff6000199116019060ff82116116b457565b919082039182116116b457565b67ffffffffffffffff811161157e5760051b60200190565b906117708261174e565b61177d6040519182611594565b828152809261178e601f199161174e565b0190602036910137565b80518210156117ac5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90816020910312611497575180151581036114975790565b6001600160a01b0390911681526080602080830182905283519183018290529260a0830192919084019060005b8582821061182a5750505050600160408201526060818303910152600081520190565b835186529485019490920191600101611807565b6004805460ff600091168015611c5b5761185960ff9161172e565b168082526020600781526040918284205415611c465761189b6003547f0000000000000000000000000000000000000000000000000000000000000000611741565b948515611c2f5783516370a0823160e01b815230818301526001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908581602481855afa908115611b39579089918991611bfa575b5010611ba85761192c60ff7f000000000000000000000000000000000000000000000000000000000000000016611766565b928861195b60ff7f00000000000000000000000000000000000000000000000000000000000000001686611798565b52807f00000000000000000000000000000000000000000000000000000000000000001691888851888160448163095ea7b360e01b95868252898b830152806024830152875af18015611b9e576119e0928a928e92611b81575b508b519081526001600160a01b03871688820190815260208101929092529283918291604090910190565b03818d865af18015611b7757611b5a575b5062015180420192834211611b4757803b15611b43579160848a92838d97969565ffffffffffff8d5197889687956387517c4560e01b87528b870152807f0000000000000000000000000000000000000000000000000000000000000000169b8c60248801521660448601521660648401525af18015611b3957611b26575b50813b15610c4957918691611abb9383885180968195829463bf6ee3fd60e01b84527f00000000000000000000000000000000000000000000000000000000000000009084016117da565b03925af18015611b1c57611b04575b508352600990528120805460ff191660011790557f1209e1080cd3a83981de8feb8856cd78637291d5929a806202ca79415225c4289080a2565b611b0e859161156a565b611b185738611aca565b8380fd5b84513d87823e3d90fd5b611b329097919761156a565b9538611a70565b87513d8a823e3d90fd5b8980fd5b634e487b7160e01b8a526011855260248afd5b611b7090883d8a11610fd657610fc68183611594565b50386119f1565b89513d8c823e3d90fd5b611b9790843d8611610fd657610fc68183611594565b50386119b5565b8a513d8d823e3d90fd5b855162461bcd60e51b8152808301869052602660248201527f4e6f7420656e6f75676820696e63656e746976652062616c616e636520746f20604482015265646f6e61746560d01b6064820152608490fd5b809250878092503d8311611c28575b611c138183611594565b81010312611c2457889051386118fa565b8780fd5b503d611c09565b508352600990529020805460ff1916600117905550565b50600990529020805460ff1916600117905550565b505050565b4760008115611d8c57611c9560ff7f000000000000000000000000000000000000000000000000000000000000000016611766565b82611cc360ff7f00000000000000000000000000000000000000000000000000000000000000001683611798565b527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561027a57611d3a8492849260405194858094819363bf6ee3fd60e01b83527f0000000000000000000000000000000000000000000000000000000000000000600484016117da565b03925af18015611d8157907f6a105f72bec70df8ca4968fb6316bfbbcc1a488a733ebae3f6088e81652226f39291611d72575b5080a2565b611d7b9061156a565b38611d6d565b6040513d84823e3d90fd5b5050565b818102929181159184041417156116b457565b8115611dad570490565b634e487b7160e01b600052601260045260246000fd5b15611dca57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204f4c415320726577617264730000000000000000006044820152606490fd5b60ff600454168015611ec857611e2660ff9161172e565b16906000908282526006602052604082209060018060a01b0316908183526020526040822054611ec2578282526005602052604082209082526020526040812054918152600760205260408120549082158015611eba575b611eb4575061068c611eb1927f000000000000000000000000000000000000000000000000000000000000000090611d90565b90565b91505090565b508115611e7e565b50905090565b5050600090565b15611ed657565b60405162461bcd60e51b815260206004820152602860248201527f4e6f7420656e6f756768204f4c4153207265776172647320746f20706c6179206044820152677468652067616d6560c01b6064820152608490fd5b7f00000000000000000000000000000000000000000000000000000000000000008110611f9857611f5e6102cf6115b6565b6002548015611f8a57670de0b6b3a7640000918281029281840414901517156116b457611eb191611da3565b5050670de0b6b3a764000090565b60405162461bcd60e51b815260206004820152601860248201527f4d696e696d756d20646f6e6174696f6e206e6f74206d657400000000000000006044820152606490fd5b906120045750805115611ff257805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612037575b612015575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561200d565b60ff600454169060009182526005602052604082209060018060a01b0316825260205260408120549081156120a457670de0b6b3a7640000808302928304036120905750600254611eb191611da3565b634e487b7160e01b81526011600452602490fd5b905090565b60ff6004541680156120d6576000526008602052604060002054804310156120d657611eb1904390611741565b50600090565b60ff6004541680156120d6576120f360ff9161172e565b16600052600960205260ff604060002054166121455760076020526040600020541561214557611eb16003547f0000000000000000000000000000000000000000000000000000000000000000611741565b60009056fea26469706673582212203d1402d1bc59706526b93043bef7e0cb16f6be68688595b57427b827eba432e164736f6c63430008140033",
  "deployedBytecode": "0x60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908162b370441461146b575080630b9663db1461136057806312261ee71461131c57806320263e87146112d857806324c05b311461128d5780633e0dc34e14611249578063402914f51461122357806340add90514611206578063415ad1d7146111c857806349ec8b38146111845780634e71d92d14610dd2578063533b3bfc14610db557806357d775f814610779578063715018a614610d58578063736a83a11461075a57806376671808146107a6578063773f7a3a1461099b5780637941a06214610d3b5780637d22771d14610cf05780638515697a14610cd057806385de7ff614610a3857806386b7455314610a075780638c3e5a06146109c95780638da5cb5b146109a05780639453e78c1461099b57806396d8f4f3146109605780639971db2f1461094457806399ffc1f81461090f578063a5be619a146108c8578063ad99c57b14610897578063b2cb3a9b1461086a578063b519fc1f14610805578063b88140ae146107c7578063b97dd9e2146107a6578063b99c13e01461077e578063cfe8a73b14610779578063d54ad2a11461075a578063d56e30681461073b578063d9d60b5214610491578063ed88c68e1461027e5763f2fde38b03610011573461027a57602036600319011261027a576102056114b2565b9061020e61153e565b6001600160a01b03918216928315610264575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b508260031936011261027a57610292611684565b60ff815416801561044e577f000000000000000000000000000000000000000000000000000000000000000034106103f1576102f76102cf6115b6565b7f00000000000000000000000000000000000000000000000000000000000000001115611ecf565b808452602091600583528385203386528352838520546103ae578185526007835260088486205410156103745750610331346002546116a7565b6002558352600581528183209033845252349082205534337f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c528380a36001815580f35b835162461bcd60e51b8152908101839052601460248201527313585e08191bdb985d1bdc9cc81c995858da195960621b6044820152606490fd5b835162461bcd60e51b8152908101839052601a60248201527f416c726561647920646f6e6174656420746869732065706f63680000000000006044820152606490fd5b506020608492519162461bcd60e51b8352820152603160248201527f446f6e6174696f6e20616d6f756e74206973206c657373207468616e207468656044820152701036b4b734b6bab6903237b730ba34b7b760791b6064820152fd5b506020606492519162461bcd60e51b8352820152601860248201527f47616d6520686173206e6f7420737461727465642079657400000000000000006044820152fd5b5091346107385760209182600319360112610734576104ae6114b2565b9160ff8554169283825260088552828220548043101560001461072557825b60025460035486516370a0823160e01b8152308b820152929091907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038b866024817f000000000000000000000000000000000000000000000000000000000000000085165afa95861561071b5789966106e8575b508a895260058c528989209716808952968b528888205495836106a6576101c09c5088975b8c8c806106185750505088995b836105856115b6565b10159b81519d8e9182527f00000000000000000000000000000000000000000000000000000000000000009101528c01527f000000000000000000000000000000000000000000000000000000000000000060608c015260808b015260a08a015260c089015260e088015261010087015261012086015261014085015261016084015215156101808301526101a0820152f35b60ff6106296007929e9d949e61172e565b1691828452600681528d8d852090855281528c84205415159d838552600582528d852090855281528c84205492845252848b832054918015801561069e575b8015610697575b1561067d575050509861057c565b61069193509061068c91611d90565b611da3565b9861057c565b508d61066f565b508215610668565b670de0b6b3a76400008088029088820414881517156106d4576101c09d50846106ce91611da3565b9761056f565b50634e487b7160e01b895260118d52602489fd5b9095508b81813d8311610714575b6107008183611594565b810103126107105751943861054a565b8880fd5b503d6106f6565b8a513d8b823e3d90fd5b61072f4382611741565b6104cd565b5080fd5b80fd5b5050346107345781600319360112610734576020906002549051908152f35b5050346107345781600319360112610734576020906003549051908152f35b6114c8565b503461027a57602036600319011261027a57602092503561079d6115b6565b10159051908152f35b5091346107385780600319360112610738575060ff60209254169051908152f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b833461073857806003193601126107385761081e61153e565b61083a60025460ff600454166000526007602052604060002055565b6108426116ca565b807f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8180a280f35b5050346107345760203660031901126107345760209061089061088b6114b2565b612040565b9051908152f35b505034610734576020366003190112610734578060209260ff6108b8611487565b1681526007845220549051908152f35b5050346107345781600319360112610734576020906108e56115b6565b9051907f000000000000000000000000000000000000000000000000000000000000000011158152f35b5050346107345760203660031901126107345760ff8160209382610931611487565b1681526009855220541690519015158152f35b5050346107345781600319360112610734576020905160088152f35b505034610734578160031936011261073457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b611503565b50503461073457816003193601126107345760015490516001600160a01b039091168152602090f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b505034610734576020366003190112610734578060209260ff610a28611487565b1681526008845220549051908152f35b508290346107345760208060031936011261027a578135938415610c8f5780516370a0823160e01b815233848201526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939182818981885afa8015610c545782908890610c5e575b610ab892501015611dc3565b8251636eb1769f60e11b8152338682015230888201528281604481885afa908115610c54579082918891610c1f575b5010610be657825190828201906323b872dd60e01b8252338984015230604484015260648301526064825260a082019167ffffffffffffffff9281811084821117610bd457855251969796889182919082885af13d15610bc7573d918211610bb55790610b7391845191610b6485601f19601f8401160184611594565b82523d898584013e5b85611fdd565b8051918215159283610b9c575b505050610b8b578480f35b51635274afe760e01b815291820152fd5b610bac93508201810191016117c2565b15868080610b80565b634e487b7160e01b8852604186528688fd5b610b739150606090610b6d565b634e487b7160e01b8952604188528989fd5b825162461bcd60e51b8152808601839052601481890152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606490fd5b809250848092503d8311610c4d575b610c388183611594565b81010312610c495781905189610ae7565b8680fd5b503d610c2e565b84513d89823e3d90fd5b50508281813d8311610c88575b610c758183611594565b81010312610c495781610ab89151610aac565b503d610c6b565b5162461bcd60e51b815291820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260649150fd5b509134610738576020366003190112610738575061089060209235611f2c565b50503461073457806003193601126107345780602092610d0e611487565b60ff610d1861149c565b91168252600685528282206001600160a01b039091168252845220549051908152f35b5050346107345781600319360112610734576020906108906120a9565b8334610738578060031936011261073857610d7161153e565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346107345781600319360112610734576020906108906120dc565b503461027a578260031936011261027a57610deb611684565b60ff815416801561114857610e0160ff9161172e565b16918284526020916008835281852054156111115783855260088352818520547f00000000000000000000000000000000000000000000000000000000000000006001600160ff1b03811681036110fe5790610e609160011b906116a7565b43116110c757838552600683528185203386528352818520546110945783855260058352818520338652835281852054801561105e57848652600784528286205490811561101b579061068c610ed7927f000000000000000000000000000000000000000000000000000000000000000090611d90565b938415610fe65784610f3693928592610ef983610ef26115b6565b1015611dc3565b88526006835283882033808a52908452848920839055845163a9059cbb60e01b815291820190815260208101929092529384918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610fdd5750610faf575b5050610f80816003546116a7565b600355337ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8380a36001815580f35b81610fce92903d10610fd6575b610fc68183611594565b8101906117c2565b503880610f72565b503d610fbc565b513d86823e3d90fd5b5082606492519162461bcd60e51b8352820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152fd5b835162461bcd60e51b8152808401869052601760248201527f4e6f20646f6e6174696f6e7320746869732065706f63680000000000000000006044820152606490fd5b5082606492519162461bcd60e51b83528201526011602482015270139bc8191bdb985d1a5bdb88199bdd5b99607a1b6044820152fd5b82606492519162461bcd60e51b8352820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152fd5b82606492519162461bcd60e51b8352820152601360248201527210db185a5b481dda5b991bddc818db1bdcd959606a1b6044820152fd5b634e487b7160e01b875260118352602487fd5b82606492519162461bcd60e51b83528201526013602482015272115c1bd8da081b9bdd08195b991959081e595d606a1b6044820152fd5b506020606492519162461bcd60e51b835282015260166024820152754e6f2065706f636820746f20636c61696d2066726f6d60501b6044820152fd5b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107345781600319360112610734576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346107345781600319360112610734576020906108906115b6565b505034610734576020366003190112610734576020906108906112446114b2565b611e0f565b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610734578060031936011261073457806020926112ab611487565b60ff6112b561149c565b91168252600585528282206001600160a01b039091168252845220549051908152f35b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610734578160031936011261073457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461027a578260031936011261027a5760ff8154168352600860205261138c82842054431015611647565b611394611684565b60ff8154169081156114365750825260086020528120546113b6904311611647565b6113be61183e565b6113c6611c60565b6113e260025460ff600454166000526007602052604060002055565b6113ea6116ca565b7f00000000000000000000000000000000000000000000000000000000000000007f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8280a26001815580f35b606490602084519162461bcd60e51b8352820152600f60248201526e139bc8195c1bd8da081d1bc8195b99608a1b6044820152fd5b8490346107345781600319360112610734576020906002548152f35b6004359060ff8216820361149757565b600080fd5b602435906001600160a01b038216820361149757565b600435906001600160a01b038216820361149757565b346114975760003660031901126114975760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346114975760003660031901126114975760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001546001600160a01b0316330361155257565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161157e57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761157e57604052565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561163b5760009161160d575090565b906020823d8211611633575b8161162660209383611594565b8101031261073857505190565b3d9150611619565b6040513d6000823e3d90fd5b1561164e57565b60405162461bcd60e51b815260206004820152600e60248201526d22b837b1b4103737ba1037bb32b960911b6044820152606490fd5b600260005414611695576002600055565b604051633ee5aeb560e01b8152600490fd5b919082018092116116b457565b634e487b7160e01b600052601160045260246000fd5b600454600160ff82160160ff81116116b45760ff16809160ff1916176004556000600255600060035561171d7f0000000000000000000000000000000000000000000000000000000000000000436116a7565b906000526008602052604060002055565b60ff6000199116019060ff82116116b457565b919082039182116116b457565b67ffffffffffffffff811161157e5760051b60200190565b906117708261174e565b61177d6040519182611594565b828152809261178e601f199161174e565b0190602036910137565b80518210156117ac5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90816020910312611497575180151581036114975790565b6001600160a01b0390911681526080602080830182905283519183018290529260a0830192919084019060005b8582821061182a5750505050600160408201526060818303910152600081520190565b835186529485019490920191600101611807565b6004805460ff600091168015611c5b5761185960ff9161172e565b168082526020600781526040918284205415611c465761189b6003547f0000000000000000000000000000000000000000000000000000000000000000611741565b948515611c2f5783516370a0823160e01b815230818301526001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908581602481855afa908115611b39579089918991611bfa575b5010611ba85761192c60ff7f000000000000000000000000000000000000000000000000000000000000000016611766565b928861195b60ff7f00000000000000000000000000000000000000000000000000000000000000001686611798565b52807f00000000000000000000000000000000000000000000000000000000000000001691888851888160448163095ea7b360e01b95868252898b830152806024830152875af18015611b9e576119e0928a928e92611b81575b508b519081526001600160a01b03871688820190815260208101929092529283918291604090910190565b03818d865af18015611b7757611b5a575b5062015180420192834211611b4757803b15611b43579160848a92838d97969565ffffffffffff8d5197889687956387517c4560e01b87528b870152807f0000000000000000000000000000000000000000000000000000000000000000169b8c60248801521660448601521660648401525af18015611b3957611b26575b50813b15610c4957918691611abb9383885180968195829463bf6ee3fd60e01b84527f00000000000000000000000000000000000000000000000000000000000000009084016117da565b03925af18015611b1c57611b04575b508352600990528120805460ff191660011790557f1209e1080cd3a83981de8feb8856cd78637291d5929a806202ca79415225c4289080a2565b611b0e859161156a565b611b185738611aca565b8380fd5b84513d87823e3d90fd5b611b329097919761156a565b9538611a70565b87513d8a823e3d90fd5b8980fd5b634e487b7160e01b8a526011855260248afd5b611b7090883d8a11610fd657610fc68183611594565b50386119f1565b89513d8c823e3d90fd5b611b9790843d8611610fd657610fc68183611594565b50386119b5565b8a513d8d823e3d90fd5b855162461bcd60e51b8152808301869052602660248201527f4e6f7420656e6f75676820696e63656e746976652062616c616e636520746f20604482015265646f6e61746560d01b6064820152608490fd5b809250878092503d8311611c28575b611c138183611594565b81010312611c2457889051386118fa565b8780fd5b503d611c09565b508352600990529020805460ff1916600117905550565b50600990529020805460ff1916600117905550565b505050565b4760008115611d8c57611c9560ff7f000000000000000000000000000000000000000000000000000000000000000016611766565b82611cc360ff7f00000000000000000000000000000000000000000000000000000000000000001683611798565b527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561027a57611d3a8492849260405194858094819363bf6ee3fd60e01b83527f0000000000000000000000000000000000000000000000000000000000000000600484016117da565b03925af18015611d8157907f6a105f72bec70df8ca4968fb6316bfbbcc1a488a733ebae3f6088e81652226f39291611d72575b5080a2565b611d7b9061156a565b38611d6d565b6040513d84823e3d90fd5b5050565b818102929181159184041417156116b457565b8115611dad570490565b634e487b7160e01b600052601260045260246000fd5b15611dca57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204f4c415320726577617264730000000000000000006044820152606490fd5b60ff600454168015611ec857611e2660ff9161172e565b16906000908282526006602052604082209060018060a01b0316908183526020526040822054611ec2578282526005602052604082209082526020526040812054918152600760205260408120549082158015611eba575b611eb4575061068c611eb1927f000000000000000000000000000000000000000000000000000000000000000090611d90565b90565b91505090565b508115611e7e565b50905090565b5050600090565b15611ed657565b60405162461bcd60e51b815260206004820152602860248201527f4e6f7420656e6f756768204f4c4153207265776172647320746f20706c6179206044820152677468652067616d6560c01b6064820152608490fd5b7f00000000000000000000000000000000000000000000000000000000000000008110611f9857611f5e6102cf6115b6565b6002548015611f8a57670de0b6b3a7640000918281029281840414901517156116b457611eb191611da3565b5050670de0b6b3a764000090565b60405162461bcd60e51b815260206004820152601860248201527f4d696e696d756d20646f6e6174696f6e206e6f74206d657400000000000000006044820152606490fd5b906120045750805115611ff257805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612037575b612015575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561200d565b60ff600454169060009182526005602052604082209060018060a01b0316825260205260408120549081156120a457670de0b6b3a7640000808302928304036120905750600254611eb191611da3565b634e487b7160e01b81526011600452602490fd5b905090565b60ff6004541680156120d6576000526008602052604060002054804310156120d657611eb1904390611741565b50600090565b60ff6004541680156120d6576120f360ff9161172e565b16600052600960205260ff604060002054166121455760076020526040600020541561214557611eb16003547f0000000000000000000000000000000000000000000000000000000000000000611741565b60009056fea26469706673582212203d1402d1bc59706526b93043bef7e0cb16f6be68688595b57427b827eba432e164736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 845,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 972,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "totalDonated",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 974,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "totalClaimed",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 977,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "currentEpoch",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 986,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToDonations",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint8,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 992,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToClaimed",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint8,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 996,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToTotalDonated",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint8,t_uint256)"
      },
      {
        "astId": 1000,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToEndBlock",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint8,t_uint256)"
      },
      {
        "astId": 1004,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochDonated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint8,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint8,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint8,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}