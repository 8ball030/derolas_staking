/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  8453: {
    DerolasStaking: {
      address: "0xb9b0c96e4E7181926D2A7ed331C9C346dfa59b4D",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_minDonation",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_balancerRouter",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poolId",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_assetsInPool",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_incentiveTokenAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_incentiveTokenIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_availableRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_epochLength",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxCheckpointDelay",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "TokenTransferFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "epochCounter",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "totalEpochDonations",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "totalEpochClaimed",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "availableRewards",
              type: "uint256",
            },
          ],
          name: "AuctionEnded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "donatorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "DonationReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnerUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "nextEpoch",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "availableRewards",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "epochLength",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "maxCheckpointDelay",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "minDonation",
              type: "uint256",
            },
          ],
          name: "ParamsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "donatorAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardsClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "stakingInstance",
              type: "address",
            },
          ],
          name: "StakingInstanceUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "TopUpIncentiveReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "insufficientBalance",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "expected",
              type: "uint256",
            },
          ],
          name: "UnclaimedRewardsAdjusted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "UnclaimedRewardsDonated",
          type: "event",
        },
        {
          inputs: [],
          name: "assetsInPool",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "balancerRouter",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "changeOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "newEpochRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "newEpochLength",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "newMaxCheckpointDelay",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "minDonation",
              type: "uint256",
            },
          ],
          name: "changeParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "claimable",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "currentEpoch",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "donate",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "endEpoch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "epochPoints",
          outputs: [
            {
              internalType: "uint256",
              name: "availableRewards",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalDonated",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalClaimed",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "length",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxCheckpointDelay",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "minDonations",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "epochToClaimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "epochToDonations",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "donation",
              type: "uint256",
            },
          ],
          name: "estimateTicketPercentage",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getCurrentShare",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getEpochProgress",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getGameState",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "epochLength",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currentEpoch",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "epochEndTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "minimalDonation",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "secondsRemaining",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "epochRewards",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalDonated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalClaimed",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "incentiveBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userCurrentDonation",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userCurrentShare",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userClaimable",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "hasClaimed",
                  type: "bool",
                },
                {
                  internalType: "bool",
                  name: "canPlayGame",
                  type: "bool",
                },
              ],
              internalType: "struct GameState",
              name: "state",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "multisig",
              type: "address",
            },
          ],
          name: "getMultisigNonces",
          outputs: [
            {
              internalType: "uint256[]",
              name: "nonces",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getRemainingEpochLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSecondsSinceEpochEnd",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalUnclaimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "incentiveTokenAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "incentiveTokenIndex",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "curNonces",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "lastNonces",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isRatioPass",
          outputs: [
            {
              internalType: "bool",
              name: "ratioPass",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "paramsUpdateRequested",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "permit2",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "poolId",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_stakingInstance",
              type: "address",
            },
          ],
          name: "setStakingInstance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "stakingInstance",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "topUpIncentiveBalance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
